{"remainingRequest":"/Users/wanchengting/Desktop/數位商務應用/airplane_rev_manage_F/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wanchengting/Desktop/數位商務應用/airplane_rev_manage_F/frontend/src/pages/CustomerOrder.vue?vue&type=style&index=0&id=2d5d03c8&lang=scss&scoped=true","dependencies":[{"path":"/Users/wanchengting/Desktop/數位商務應用/airplane_rev_manage_F/frontend/src/pages/CustomerOrder.vue","mtime":1705172466618},{"path":"/Users/wanchengting/Desktop/數位商務應用/airplane_rev_manage_F/frontend/node_modules/css-loader/index.js","mtime":1703513904904},{"path":"/Users/wanchengting/Desktop/數位商務應用/airplane_rev_manage_F/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1703513905431},{"path":"/Users/wanchengting/Desktop/數位商務應用/airplane_rev_manage_F/frontend/node_modules/sass-loader/dist/cjs.js","mtime":1703513904908},{"path":"/Users/wanchengting/Desktop/數位商務應用/airplane_rev_manage_F/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1703513905140},{"path":"/Users/wanchengting/Desktop/數位商務應用/airplane_rev_manage_F/frontend/node_modules/vue-loader/lib/index.js","mtime":1703513905274}],"contextDependencies":[],"result":["\n.card {\n  width: 500px;\n  // 看要不要置中\n  margin: auto;\n}\n\n",{"version":3,"sources":["CustomerOrder.vue"],"names":[],"mappings":";AAyOA;AACA;AACA;AACA;AACA","file":"CustomerOrder.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <card class=\"card\" title=\"乘客訂位系統\">\n    <div>\n      <form @submit.prevent>\n        <!-- <div class=\"row\">\n          <div class=\"col-md-12\">\n            <fg-input\n              type=\"text\"\n              label=\"日期\"\n              placeholder=\"日期\"\n              v-model=\"para.date\"\n            >\n            </fg-input>\n          </div>\n        </div> -->\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <fg-input\n              type=\"text\"\n              label=\"出發地\"\n              placeholder=\"出發地\"\n              v-model=\"para.orgin\"\n            >\n            </fg-input>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <fg-input\n              type=\"text\"\n              label=\"目的地\"\n              placeholder=\"目的地\"\n              v-model=\"para.destination\"\n            >\n            </fg-input>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12\" style=\"margin: 0px 0px 16px\">\n            <label class=\"control-label\">\n              日期\n            </label>\n            <!-- style=\"border: 1px solid #fffcf5; height: 25px; ackground-color: #fffcf5;\" -->\n            <date-picker\n              style=\"border: 0px solid #fffcf5;width:470px;\"\n              class=\"form-control\"\n              v-model=\"para.date\"\n              type=\"date\"\n              placeholder=\"日期\"\n              @change=\"handleDateChange\"\n              >\n            </date-picker>\n          </div>\n        </div>\n\n       \n\n        <div class=\"row\">\n          <div class=\"col-md-12\" style=\"margin: 0px 0px 16px\">\n            <label class=\"control-label\">\n              艙等與對應價格\n            </label>\n            <select v-model=\"value\" placeholder=\"請選擇艙等\"  style=\"border: 0px solid #fffcf5;width:470px;\" class=\"form-control\">\n              <option\n                v-for=\"item in options\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\"\n              \n                >\n              </option>\n            </select>\n          </div>\n        </div>\n\n      \n\n\n        <div class=\"text-center\">\n          <!-- @click.native.prevent=\"updateProfile\" -->\n          <p-button type=\"info\" round  @click.native.prevent=\"updateProfile\" >\n            確認送出\n          </p-button>\n        </div>\n        <div class=\"clearfix\"></div>\n      </form>\n    </div>\n  </card>\n</template>\n<script>\nimport { DatePicker } from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\n// import NotificationTemplate from \"./Notifications/NotificationSet\";\nimport { Dropdown, Option, Select,Button } from 'element-ui';\nimport axios from 'axios';\n\nexport default {\n  components: {\n      DatePicker,\n      Option,\n      Select,\n\n    },\n  data() {\n    return {\n      options: [\n        //  {\n        //   // value: '选项2',\n        //   label: '双皮奶'\n        // },  \n       \n      ],\n        value: '',\n        para: {\n        date: \"\",\n        flight_id: \"MM620\",\n        orgin: \"TPE\",\n        destination: \"NRT\",\n      },\n      depart_date: \"\",\n      type: [\"\", \"info\", \"success\", \"warning\", \"danger\"],\n      notifications: {\n        topCenter: false,\n      },\n      postData: {\n        origin: 'TPE',\n        destination: 'NRT',\n        department_date: '',\n        class: '',\n\n      },\n    };\n  },\n  methods: {\n    \n    updateProfile() {\n      this.postData.department_date = this.para.date;\n      // console.log(this.value);\n      this.postData.class = this.value.charAt(0);\n      console.log(this.postData);\n      axios.post('http://34.125.243.130:5000/booking', this.postData)\n            .then(res => {\n            // 请求成功时更新数据\n          \n              console.log(res.data);\n            })\n            .catch(error => {\n            // 请求失败时处理错误\n                console.error('请求失败：', error);\n        });\n      \n      this.para.date = \"\";\n      this.value = \"\";\n      this.options = [];\n      alert(\"訂位成功\");\n      \n      \n      console.log();\n    },\n    handleDateChange() {\n      // 触发自定义事件\n      this.depart_date = this.formatDateString(this.para.date);\n      axios.post('http://34.125.243.130:5000/booking_flight_info', {depart_date: this.depart_date})\n            .then(res => {\n            // 请求成功时更新数据\n            this.options = [];\n              for(let i = 0; i < res.data.class_and_price.length; i++) {\n               this.options.push(res.data.class_and_price[i]) ;\n\n              }\n             \n              console.log(res.data);\n            })\n            .catch(error => {\n            // 请求失败时处理错误\n                console.error('请求失败：', error);\n            });\n           \n\n      \n    },\n    formatDateString(inputDateString) {\n      // 创建 Date 对象\n      const dateObject = new Date(inputDateString);\n\n      // 获取年、月、日\n      const year = dateObject.getFullYear();\n      const month = String(dateObject.getMonth() + 1).padStart(2, '0'); // 月份从0开始，需要加1\n      const day = String(dateObject.getDate()).padStart(2, '0');\n\n      // 格式化为字符串\n      const formattedDateString = `${year}-${month}-${day}`;\n\n      return formattedDateString;\n    },\n    // 跳出通知\n  //   notifyVue(verticalAlign, horizontalAlign) {\n  //     const color = Math.floor(Math.random() * 4 + 1);\n  //     this.$notify({\n  //       component: NotificationTemplate,\n  //       icon: \"ti-settings\",\n  //       horizontalAlign: horizontalAlign,\n  //       verticalAlign: verticalAlign,\n  //       type: this.type[color],\n  //     });\n  //  },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n  .card {\n    width: 500px;\n    // 看要不要置中\n    margin: auto;\n  }\n  \n</style>\n\n<style lang=\"scss\">\n  // 用子關係來解決全局問題\n  .form-control {\n    .el-input__inner {\n      border: 1px solid #fffcf5; \n      height: 25px; \n      background-color: #fffcf5;\n   }\n\n  }\n  \n</style>\n"]}]}